//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 26.02.2023 10:28:33
namespace Playground.Core.Models
{
    /// <summary>
    /// There are no comments for CompanySingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanySingle")]
    public partial class CompanySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Company>
    {
        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Company> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Sites")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> Sites
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Sites == null))
                {
                    this._Sites = Context.CreateQuery<global::Playground.Core.Models.Site>(GetPath("Sites"));
                }
                return this._Sites;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _Sites;
    }
    /// <summary>
    /// There are no comments for Company in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Company")]
    public partial class Company : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Company CreateCompany(int ID)
        {
            Company company = new Company();
            company.Id = ID;
            return company;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Id is required.")]
        public virtual int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Name")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
                this.OnPropertyChanged("Name");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Sites")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Playground.Core.Models.Site> Sites
        {
            get
            {
                return this._Sites;
            }
            set
            {
                this.OnSitesChanging(value);
                this._Sites = value;
                this.OnSitesChanged();
                this.OnPropertyChanged("Sites");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Playground.Core.Models.Site> _Sites = new global::Microsoft.OData.Client.DataServiceCollection<global::Playground.Core.Models.Site>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnSitesChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Playground.Core.Models.Site> value);
        partial void OnSitesChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for SiteSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("SiteSingle")]
    public partial class SiteSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Site>
    {
        /// <summary>
        /// Initialize a new SiteSingle object.
        /// </summary>
        public SiteSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new SiteSingle object.
        /// </summary>
        public SiteSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new SiteSingle object.
        /// </summary>
        public SiteSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Site> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Company")]
        public virtual global::Playground.Core.Models.CompanySingle Company
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Company == null))
                {
                    this._Company = new global::Playground.Core.Models.CompanySingle(this.Context, GetPath("Company"));
                }
                return this._Company;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Playground.Core.Models.CompanySingle _Company;
    }
    /// <summary>
    /// There are no comments for Site in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Site")]
    public partial class Site : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Site CreateSite(int ID)
        {
            Site site = new Site();
            site.Id = ID;
            return site;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Id is required.")]
        public virtual int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Name")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
                this.OnPropertyChanged("Name");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property CompanyId in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("CompanyId")]
        public virtual global::System.Nullable<int> CompanyId
        {
            get
            {
                return this._CompanyId;
            }
            set
            {
                this.OnCompanyIdChanging(value);
                this._CompanyId = value;
                this.OnCompanyIdChanged();
                this.OnPropertyChanged("CompanyId");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(global::System.Nullable<int> value);
        partial void OnCompanyIdChanged();
        /// <summary>
        /// There are no comments for Property Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Company")]
        public virtual global::Playground.Core.Models.Company Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                this.OnCompanyChanging(value);
                this._Company = value;
                this.OnCompanyChanged();
                this.OnPropertyChanged("Company");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Playground.Core.Models.Company _Company;
        partial void OnCompanyChanging(global::Playground.Core.Models.Company value);
        partial void OnCompanyChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for CompanySubSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanySubSingle")]
    public partial class CompanySubSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<CompanySub>
    {
        /// <summary>
        /// Initialize a new CompanySubSingle object.
        /// </summary>
        public CompanySubSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CompanySubSingle object.
        /// </summary>
        public CompanySubSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CompanySubSingle object.
        /// </summary>
        public CompanySubSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<CompanySub> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Sites")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> Sites
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Sites == null))
                {
                    this._Sites = Context.CreateQuery<global::Playground.Core.Models.Site>(GetPath("Sites"));
                }
                return this._Sites;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _Sites;
    }
    /// <summary>
    /// There are no comments for CompanySub in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanySub")]
    public partial class CompanySub : Company
    {
        /// <summary>
        /// Create a new CompanySub object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="sub">Initial value of Sub.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static CompanySub CreateCompanySub(int ID, int sub)
        {
            CompanySub companySub = new CompanySub();
            companySub.Id = ID;
            companySub.Sub = sub;
            return companySub;
        }
        /// <summary>
        /// There are no comments for Property Sub in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Sub")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Sub is required.")]
        public virtual int Sub
        {
            get
            {
                return this._Sub;
            }
            set
            {
                this.OnSubChanging(value);
                this._Sub = value;
                this.OnSubChanged();
                this.OnPropertyChanged("Sub");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Sub;
        partial void OnSubChanging(int value);
        partial void OnSubChanged();
    }
    /// <summary>
    /// There are no comments for CompanySub2Single in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanySub2Single")]
    public partial class CompanySub2Single : global::Microsoft.OData.Client.DataServiceQuerySingle<CompanySub2>
    {
        /// <summary>
        /// Initialize a new CompanySub2Single object.
        /// </summary>
        public CompanySub2Single(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CompanySub2Single object.
        /// </summary>
        public CompanySub2Single(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CompanySub2Single object.
        /// </summary>
        public CompanySub2Single(global::Microsoft.OData.Client.DataServiceQuerySingle<CompanySub2> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Sites")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> Sites
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Sites == null))
                {
                    this._Sites = Context.CreateQuery<global::Playground.Core.Models.Site>(GetPath("Sites"));
                }
                return this._Sites;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _Sites;
    }
    /// <summary>
    /// There are no comments for CompanySub2 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanySub2")]
    public partial class CompanySub2 : Company
    {
        /// <summary>
        /// Create a new CompanySub2 object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="sub2">Initial value of Sub2.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static CompanySub2 CreateCompanySub2(int ID, int sub2)
        {
            CompanySub2 companySub2 = new CompanySub2();
            companySub2.Id = ID;
            companySub2.Sub2 = sub2;
            return companySub2;
        }
        /// <summary>
        /// There are no comments for Property Sub2 in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Sub2")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Sub2 is required.")]
        public virtual int Sub2
        {
            get
            {
                return this._Sub2;
            }
            set
            {
                this.OnSub2Changing(value);
                this._Sub2 = value;
                this.OnSub2Changed();
                this.OnPropertyChanged("Sub2");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Sub2;
        partial void OnSub2Changing(int value);
        partial void OnSub2Changed();
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.Company as global::Playground.Core.Models.CompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Playground.Core.Models.CompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Company> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Playground.Core.Models.CompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.Company as global::Playground.Core.Models.CompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Playground.Core.Models.CompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Company> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Playground.Core.Models.CompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.Site as global::Playground.Core.Models.SiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Playground.Core.Models.SiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Playground.Core.Models.SiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.Site as global::Playground.Core.Models.SiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Playground.Core.Models.SiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Playground.Core.Models.SiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.CompanySub as global::Playground.Core.Models.CompanySubSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Playground.Core.Models.CompanySubSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.CompanySub> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Playground.Core.Models.CompanySubSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.CompanySub as global::Playground.Core.Models.CompanySubSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Playground.Core.Models.CompanySubSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.CompanySub> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Playground.Core.Models.CompanySubSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Playground.Core.Models.Company to its derived type global::Playground.Core.Models.CompanySub
        /// </summary>
        /// <param name="_source">source entity</param>
        public static global::Playground.Core.Models.CompanySubSingle CastToCompanySub(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Playground.Core.Models.Company> _source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Playground.Core.Models.CompanySub> query = _source.CastTo<global::Playground.Core.Models.CompanySub>();
            return new global::Playground.Core.Models.CompanySubSingle(_source.Context, query.GetPath(null));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.CompanySub2 as global::Playground.Core.Models.CompanySub2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Playground.Core.Models.CompanySub2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.CompanySub2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Playground.Core.Models.CompanySub2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Playground.Core.Models.CompanySub2 as global::Playground.Core.Models.CompanySub2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Playground.Core.Models.CompanySub2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.CompanySub2> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Playground.Core.Models.CompanySub2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Playground.Core.Models.Company to its derived type global::Playground.Core.Models.CompanySub2
        /// </summary>
        /// <param name="_source">source entity</param>
        public static global::Playground.Core.Models.CompanySub2Single CastToCompanySub2(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Playground.Core.Models.Company> _source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Playground.Core.Models.CompanySub2> query = _source.CastTo<global::Playground.Core.Models.CompanySub2>();
            return new global::Playground.Core.Models.CompanySub2Single(_source.Context, query.GetPath(null));
        }
    }
}
namespace Default
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }

        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Playground.core.Models", "Playground.Core.Models");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Default", "Default");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Playground.Core.Models", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Playground.core.Models.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Playground.core.Models.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Default", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Default.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Default.", clientType.Name);
            }
            if (originalNameAttribute != null)
            {
                return clientType.Namespace + "." + originalNameAttribute.OriginalName;
            }
            return clientType.FullName;
        }
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Companies")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Company> Companies
        {
            get
            {
                if ((this._Companies == null))
                {
                    this._Companies = base.CreateQuery<global::Playground.Core.Models.Company>("Companies");
                }
                return this._Companies;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Company> _Companies;
        /// <summary>
        /// There are no comments for Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Sites")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> Sites
        {
            get
            {
                if ((this._Sites == null))
                {
                    this._Sites = base.CreateQuery<global::Playground.Core.Models.Site>("Sites");
                }
                return this._Sites;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Playground.Core.Models.Site> _Sites;
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToCompanies(global::Playground.Core.Models.Company company)
        {
            base.AddObject("Companies", company);
        }
        /// <summary>
        /// There are no comments for Sites in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToSites(global::Playground.Core.Models.Site site)
        {
            base.AddObject("Sites", site);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string filePath = @"PlaygroundCsdl.xml";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader();
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;

                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, true, out edmModel, out errors))
                    {
	                    global::System.Text.StringBuilder errorMessages = new global::System.Text.StringBuilder();
	                    foreach (var error in errors)
	                    {
		                    errorMessages.Append(error.ErrorMessage);
		                    errorMessages.Append("; ");
	                    }
	                    throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader()
            {
                try
                {
                    var assembly = global::System.Reflection.Assembly.GetExecutingAssembly();
                    var resourcePath = global::System.Linq.Enumerable.Single(assembly.GetManifestResourceNames(), str => str.EndsWith(filePath));
                    global::System.IO.Stream stream = assembly.GetManifestResourceStream(resourcePath);
                    return global::System.Xml.XmlReader.Create(new global::System.IO.StreamReader(stream));
                }
                catch(global::System.Xml.XmlException e)
                {
                    throw new global::System.Xml.XmlException("Failed to create an XmlReader from the stream. Check if the resource exists.", e);
                }
            }
        }
    }
}
